<?xml version="1.0" encoding="UTF-8"?>
<project name="konywidgets" basedir="."  default="all">

	<property name="cordova.dir" value="${project.loc}/cordovatemp"/>

	<target name="copy-web-cordova">
		<if>
			<available file="${project.loc}/web/cordova" type="dir" />
			<then>
				<if>
				<available file="${cordova.dir}" type="dir" />
				<then>
					<antcall target="delete-cordova-dir" />
				</then>
				</if>
				<echo>Creating project cordova directory ${cordova.dir} on windows OS</echo>
				<mkdir dir="${cordova.dir}"/>
				<copydir src="${project.loc}/web/cordova"
					dest="${cordova.dir}" forceoverwrite="true"
				/>
			</then>
		</if>
	</target>	

	<target name="build-cordova">
		<if>
			<os family="windows" />
			<then>
				<echo>building cordova project ${cordova.dir} on windows OS</echo>
				<exec-shell dir="${cordova.dir}" executable="cmd" failonerror="false" failifexecutionfails="false" >
					<env key="JAVA_HOME" path="${installer.javahome}"/>
					<env key="Path" path="${installer.javahome}/bin:${env.Path}"/>
					<arg line='/c "${cordova-exec} platform add android --save"' />
				</exec-shell>
				<exec-shell dir="${cordova.dir}" executable="cmd" failonerror="true" failifexecutionfails="true" >
					<env key="JAVA_HOME" path="${installer.javahome}"/>
					<env key="Path" path="${installer.javahome}/bin:${env.Path}"/>
					<arg line='/c "${cordova-exec} build android"' />
				</exec-shell>
			</then>
			<else>
				<echo>building cordova project ${cordova.dir} on non windows OS</echo>
				<exec-shell dir="${cordova.dir}" executable="cmd" failonerror="false" failifexecutionfails="false" >
					<arg line='-c "export JAVA_HOME=${installer.javahome};export ANDROID_HOME=${andhome};export PATH=${installer.javahome}/bin:${PATH};${cordova-exec} platform add android --save"' />   
				</exec-shell>
				<exec-shell dir="${cordova.dir}" executable="cmd" failonerror="true" failifexecutionfails="true" >
					<arg line='-c "export JAVA_HOME=${installer.javahome};export ANDROID_HOME=${andhome};export PATH=${installer.javahome}/bin:${PATH};${cordova-exec} build android"' />
				</exec-shell>				
			</else>			
		</if>
	</target>
	
	<target name="copy-cordova-android-codegen">
		
		<echo>Copying the cordova android codegen from ${cordova.dir}</echo>
		<mkdir dir="${app.dir}/CordovaAssetsLib"/>
		<if>
			<available file="${cordova.dir}/platforms/android" type="dir" />
			<then>
				<java fork="true" failonerror="yes" jvm="${installer.javahome}/bin/java" jar="${basedir}/extres/CordovaCleanOperation.jar">
				<arg line="${cordova.dir}/platforms/android"/>
				</java>
				<copydir src="${cordova.dir}/platforms/android"
					dest="${app.dir}/CordovaAssetsLib" forceoverwrite="true"
				/>			
			</then>
		</if>
	</target>
	
	<target name="modify-build-gradle">
		<echo>Modifying build.gradle file </echo>
		<property name="SubstituteRegexJar" value="${extres}/RegxSubstitution.jar"/>
		<java fork="true" failonerror="false" jvm="${installer.javahome}/bin/java" jar="${SubstituteRegexJar}">
			<arg value="${app.dir}/CordovaAssetsLib"/>
		</java>
	</target>
	
	<target name="delete-cordova-icon">
		<echo>Deleting the cordova icon from cordova assets</echo>
		<delete>
			<fileset dir="${app.dir}/CordovaAssetsLib/res" includes="**/${ApplicationId}_icon.png">
				<filename regex="^drawable"/>
			</fileset>
		</delete>
	</target>
	
	<target name="update-gradles-manifest">
		<echo>Updating gradle and manifest files for cordova</echo>
		<replace file="${app.dir}/build.gradle" token="$COMPILE_CORDOVA_LIB" value="${compilecordovalib}"/>	
		<if>
			<available file="${app.dir}/CordovaAssetsLib/settings.gradle" type="file" />
			<then>
				<copy file="${app.dir}/CordovaAssetsLib/settings.gradle" tofile="${app.dir}/CordovaAssetsLib/settingstemp.gradle" overwrite="true"/>
				<replaceregexp file="${app.dir}/CordovaAssetsLib/settingstemp.gradle" match=":" replace=":CordovaAssetsLib:" byline="true"/>
				<loadfile property="LibList" srcfile="${app.dir}/CordovaAssetsLib/settingstemp.gradle" />
				<concat destfile="${app.dir}/settings.gradle" append="true">${line.separator}include ':CordovaAssetsLib'</concat>
				<for param="line" list="${LibList}" delimiter="${line.separator}">
					<sequential>
						<concat destfile="${app.dir}/settings.gradle" append="true">${line.separator}@{line}</concat>
					</sequential>
				</for>
				<delete file="${app.dir}/CordovaAssetsLib/settingstemp.gradle"/>
			</then>
		</if>	
		
		<replaceregexp file="${app.dir}/CordovaAssetsLib/build.gradle" match="^(apply plugin).*$" replace="apply plugin: 'android-library'" byline="true"/>
	
		<replace file="${app.dir}/CordovaAssetsLib/build.gradle" token="applicationId" value="//applicationId"/>
		
		<replaceregexp file="${app.dir}/CordovaAssetsLib/build.gradle" match="([A-Za-z]*[Cc]ompile[ ]*[(]*[ ]*project[ ]*[(]*[ ]*path[ ]*:[ ]*[&quot;|'][:]*)" replace="\1:CordovaAssetsLib:" byline="true"/>
		<replace file="${app.dir}/CordovaAssetsLib/build.gradle" token="::" value=":"/>
		
		<replace file="${app.dir}/CordovaAssetsLib/AndroidManifest.xml" token="android.intent.category.LAUNCHER" value="android.intent.category.DEFAULT"/>

		<replace file="${app.dir}/CordovaAssetsLib/AndroidManifest.xml" token="android:icon=&quot;@drawable/${ApplicationId}_icon&quot;" value=""/>

	</target>
	
	<target name="delete-cordova-dir">
		<if>
		<available file="${cordova.dir}" type="dir" />
		<then>
			<echo>Deleting the ${cordova.dir} directory</echo>
			<!-- Stopping Gradle daemon as many aapt processes spawned as childs of gradle daemon are locking the folder being deleted resulting in build failures-->
			<if>
				<not>
					<equals arg1="${killGradleDaemon}" arg2="false" />
				</not>
				<then>
				<echo>${gradlebuild.bin} --stop</echo>	
				<exec-shell executable="cmd" failonerror="false" failifexecutionfails="false" >
					<env key="JAVA_HOME" path="${installer.javahome}"/>
					<arg line='/c "${app.dir}\gradlew --stop "'/>
				</exec-shell>
				</then>
			</if>
			
			<delete dir="${cordova.dir}" failonerror="false"/>
		</then>
		</if>
	</target>
		
	<target name="all" depends="copy-web-cordova, build-cordova, copy-cordova-android-codegen, delete-cordova-icon, update-gradles-manifest, modify-build-gradle, delete-cordova-dir">
	</target>
</project>